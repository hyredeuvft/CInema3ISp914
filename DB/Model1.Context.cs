//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cinema.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AgeRestriction> AgeRestriction { get; set; }
        public virtual DbSet<CashReceipt> CashReceipt { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<CreatorCountry> CreatorCountry { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<EmployeePosition> EmployeePosition { get; set; }
        public virtual DbSet<Film> Film { get; set; }
        public virtual DbSet<Gender> Gender { get; set; }
        public virtual DbSet<Genre> Genre { get; set; }
        public virtual DbSet<MovieDistributor> MovieDistributor { get; set; }
        public virtual DbSet<MovieHall> MovieHall { get; set; }
        public virtual DbSet<MovieStudio> MovieStudio { get; set; }
        public virtual DbSet<NetCinema> NetCinema { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ProductCashReceipt> ProductCashReceipt { get; set; }
        public virtual DbSet<Provider> Provider { get; set; }
        public virtual DbSet<SessionFilm> SessionFilm { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tag> Tag { get; set; }
        public virtual DbSet<Ticket> Ticket { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<VW_CashInfo> VW_CashInfo { get; set; }
        public virtual DbSet<VW_EmployeeInfo> VW_EmployeeInfo { get; set; }
        public virtual DbSet<VW_FilmInfo> VW_FilmInfo { get; set; }
        public virtual DbSet<VW_MovieHallInfo> VW_MovieHallInfo { get; set; }
        public virtual DbSet<VW_ProductInfo> VW_ProductInfo { get; set; }
    
        public virtual int PR_AddFinalTime(Nullable<int> idFilm)
        {
            var idFilmParameter = idFilm.HasValue ?
                new ObjectParameter("IdFilm", idFilm) :
                new ObjectParameter("IdFilm", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_AddFinalTime", idFilmParameter);
        }
    
        public virtual int PR_AddFinalTimeStart(Nullable<int> idFilm)
        {
            var idFilmParameter = idFilm.HasValue ?
                new ObjectParameter("IdFilm", idFilm) :
                new ObjectParameter("IdFilm", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_AddFinalTimeStart", idFilmParameter);
        }
    
        public virtual ObjectResult<PR_ListFilm_Result> PR_ListFilm(string dateStart, string dateEnd)
        {
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_ListFilm_Result>("PR_ListFilm", dateStartParameter, dateEndParameter);
        }
    
        public virtual int PR_MinusCountProduct(Nullable<int> idProd)
        {
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("IdProd", idProd) :
                new ObjectParameter("IdProd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_MinusCountProduct", idProdParameter);
        }
    
        public virtual int PR_RecordOnFilm(string filmTitle, Nullable<int> user, Nullable<int> movieHall, Nullable<decimal> price, Nullable<System.DateTime> dateStart)
        {
            var filmTitleParameter = filmTitle != null ?
                new ObjectParameter("FilmTitle", filmTitle) :
                new ObjectParameter("FilmTitle", typeof(string));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            var movieHallParameter = movieHall.HasValue ?
                new ObjectParameter("MovieHall", movieHall) :
                new ObjectParameter("MovieHall", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_RecordOnFilm", filmTitleParameter, userParameter, movieHallParameter, priceParameter, dateStartParameter);
        }
    
        public virtual ObjectResult<PR_Statistic_Result> PR_Statistic(Nullable<System.DateTime> firstDate, Nullable<System.DateTime> secondDate)
        {
            var firstDateParameter = firstDate.HasValue ?
                new ObjectParameter("firstDate", firstDate) :
                new ObjectParameter("firstDate", typeof(System.DateTime));
    
            var secondDateParameter = secondDate.HasValue ?
                new ObjectParameter("secondDate", secondDate) :
                new ObjectParameter("secondDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_Statistic_Result>("PR_Statistic", firstDateParameter, secondDateParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
